THIS IS OLD STUFF


user can do three things

- click on operand
- click on operator
- click on utility


these are the features that the calculator must have:
- perform operations clicking number + operator + number + equals
- perform operations clicking number + operator + number + operator ... + equals
- pressing equals set first to result, so you can press it again and repeat the operation
- clicking on a number after completing operation with equals set first to the clicked number
- clicking on an operator and then equals set second = first and then perform the operation
- you cannot press equals or any other operator if first is equal to null
- double clicking on an operator has no effect
- utility buttons just modify the current operand and do nothing else
- unlike the ios calculator, this calculator can only process two numbers at the time

let's create a few variables to keep track of the operands 
let first = null
let second = null
let operator = null 

let toOperate = false
let startAgain = true -> this is set after pressing the equals button

workflow

-- operate function --
operate(){
    if operator = add
        first = first + second
    else if operator = subtract
        first = first - second
    and so on
}

-- operand buttons --
if !first || startAgain
    initialize first
    startAgain = false
else
    if first and !operator
        update first
    else if first and toOperate 
            initialize second
            toOperate = true
        else 
            update second

-- operator buttons --
if !first 
    do nothing
    return
else
    if !operator
        initialize operator
    else 
        if clicked equals operator 
            do nothing
        else
            if !toOperate
                update operator
            else 
                operate()
                second = null

--- compute button ---
if !first || !operator
    do nothing 
    return
else
    if !second
        second = first
        toOperate = true
        operate()
    else
        operate()
startAgain = true

-- utility buttons --
- reset -
set first = second = operator = null
set toOperate = false
set startAgain = true

- change sign - 
if !first
    do nothing
else
    if first and !toOperate
        update first
    else if first and toOperate (this means the operator is not null and equal has not been clicked yet)
        if second = null
            do nothing
        else 
            update second

- percentage - 
if !first
    do nothing
else
    if first and !toOperate
        update first
    else if first and toOperate (this means the operator is not null and equal has not been clicked yet)
        if second = null
            do nothing
        else 
            update second

- dot -
if !first
    do nothing
else
    if first and !toOperate
        dot first
    else if first and toOperate (this means the operator is not null and equal has not been clicked yet)
        if second = null
            do nothing
        else 
            dot second

    function dot(number){
        if number (which is a string as it is passed to the function) contains "."
            do nothing
            return
        else
            return number + "."
    }